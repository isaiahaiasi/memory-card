{"version":3,"sources":["components/Button.jsx","components/GamePlay.jsx","components/GameOver.jsx","components/GameStart.jsx","components/ScoreBoard.js","components/GameHandler.jsx","App.jsx","index.js"],"names":["Button","props","className","GamePlay","words","clickedWords","handleSelection","getRandomWord","Number","parseInt","Math","random","length","generateWordSet","unclickedWord","newWordSet","Set","size","add","includes","newWordArray","Array","from","floor","useState","wordsArray","setWordsArray","map","word","i","onClick","EndView","score","highScore","maxScore","restart","goHome","gameOverMsg","style","fontSize","GameStart","handleStart","ScoreBoard","gameMode","GameHandler","currentGameMode","setGameMode","localStorage","getItem","setHighScore","setClickedWords","getScore","useEffect","setItem","prevWords","Error","getGameRender","clearLocalStorage","console","log","clear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88303611.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Button(props) {\n  return <button {...props} className={\"btn \" + (props.className ?? \"\")} />;\n}\n","import React, { useState } from \"react\";\nimport Button from \"./Button\";\n\nexport default function GamePlay({ words, clickedWords, handleSelection }) {\n  const getRandomWord = () =>\n    words[Number.parseInt(Math.random() * words.length)];\n\n  const generateWordSet = () => {\n    const newWordSet = new Set();\n    while (newWordSet.size < 4) {\n      newWordSet.add(getRandomWord());\n    }\n\n    // find an unclicked word\n    let unclickedWord;\n    do {\n      unclickedWord = getRandomWord();\n    } while (clickedWords.includes(unclickedWord));\n\n    // add the unclicked word at a random index\n    // (means one unnecessary getRandomWord(), but idc)\n    const newWordArray = Array.from(newWordSet);\n    newWordArray[Math.floor(Math.random() * 4)] = unclickedWord;\n    return newWordArray;\n  };\n\n  const [wordsArray, setWordsArray] = useState(generateWordSet());\n\n  const onClick = (word) => {\n    // TODO: add cooldown on click for transition & stop accidental double-clicks\n    handleSelection(word);\n    setWordsArray(generateWordSet());\n  };\n\n  return (\n    <div className=\"game-play-container\">\n      <section className=\"word-selector\">\n        {wordsArray.map((word, i) => (\n          <Button key={word + i} onClick={() => onClick(word)}>\n            {word}\n          </Button>\n        ))}\n      </section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"./Button\";\n\nexport default function EndView({\n  clickedWords,\n  score,\n  highScore,\n  maxScore,\n  restart,\n  goHome,\n}) {\n  const gameOverMsg =\n    score === maxScore\n      ? \"Impressive! Wow! Good job!\"\n      : score === highScore\n      ? \"Congratulations! New high score!\"\n      : \"Aww, better luck next time! :)\";\n\n  return (\n    <section className=\"game-over\">\n      <p>{gameOverMsg}</p>\n      <p style={{ fontSize: \"4rem\" }}>\n        {score}/{maxScore}\n      </p>\n      <p>Highscore: {highScore}</p>\n      <p style={{ fontSize: \"1rem\" }}>You clicked on these words:</p>\n      <div className=\"game-over__word-list-spacer\">\n        <ol className=\"game-over__word-list\">\n          {clickedWords.map((word) => (\n            <li key={word}>{word}</li>\n          ))}\n        </ol>\n      </div>\n      <Button onClick={restart}>Play Again?</Button>\n      <Button onClick={goHome}>Go to homepage</Button>\n    </section>\n  );\n}\n","import React from \"react\";\nimport Button from \"./Button\";\n\nexport default function GameStart({ handleStart }) {\n  return (\n    <section>\n      <h1>Rules:</h1>\n      <ul>\n        <li>Click on the words/phrases.</li>\n        <li>Don't click on the same word/phrase again.</li>\n      </ul>\n      <Button onClick={() => handleStart()}>Start Game!</Button>\n    </section>\n  );\n}\n","import React from \"react\";\n\nexport default function ScoreBoard({ score, highScore, maxScore }) {\n  return (\n    <div className=\"score-board\">\n      <p>Current Score:</p>\n      <p className=\"score-board__current-score\">\n        {score}/{maxScore}\n      </p>\n      <p>High Score: {highScore}</p>\n    </div>\n  );\n}\n","import \"../styles/game.css\";\nimport React, { useState, useEffect } from \"react\";\nimport words from \"../words.json\";\nimport GamePlay from \"./GamePlay\";\nimport GameOver from \"./GameOver\";\nimport GameStart from \"./GameStart\";\nimport ScoreBoard from \"./ScoreBoard\";\n\nconst gameMode = {\n  start: \"start\",\n  active: \"active\",\n  end: \"end\",\n};\n\nexport default function GameHandler() {\n  const [currentGameMode, setGameMode] = useState(gameMode.start);\n  const [highScore, setHighScore] = useState(\n    localStorage.getItem(\"highScore\") ?? 0\n  );\n  const [clickedWords, setClickedWords] = useState([]);\n\n  // this is the def of score, & I shouldn't have duplicate/derivable state\n  const getScore = () => clickedWords.length;\n\n  // save highscore in localstorage\n  // (I think this is the right way to useEffect?)\n  useEffect(() => {\n    localStorage.setItem(\"highScore\", highScore);\n  }, [highScore]);\n\n  const handleGameOver = () => {\n    if (getScore() > highScore) {\n      setHighScore(getScore());\n    }\n    setGameMode(gameMode.end);\n  };\n\n  const handleSelection = (word) => {\n    if (clickedWords.includes(word)) {\n      handleGameOver();\n    } else {\n      setClickedWords((prevWords) => [...prevWords, word]);\n    }\n  };\n\n  // RENDER LOGIC\n\n  const renderStart = () => {\n    return <GameStart handleStart={() => setGameMode(gameMode.active)} />;\n  };\n\n  const renderActive = () => {\n    // TODO: render ScoreBoard as well\n    return (\n      <div className=\"game-active\">\n        <ScoreBoard\n          score={getScore()}\n          highScore={highScore}\n          maxScore={words.length}\n        />\n        <GamePlay\n          words={words}\n          clickedWords={clickedWords}\n          handleSelection={handleSelection}\n        />\n      </div>\n    );\n  };\n\n  const renderGameOver = () => {\n    return (\n      <GameOver\n        clickedWords={clickedWords}\n        score={getScore()}\n        highScore={highScore}\n        maxScore={words.length}\n        restart={() => {\n          setClickedWords([]);\n          setGameMode(gameMode.active);\n        }}\n        goHome={() => {\n          setClickedWords([]);\n          setGameMode(gameMode.start);\n        }}\n      />\n    );\n  };\n\n  const getGameRender = () => {\n    switch (currentGameMode) {\n      case gameMode.start:\n        return renderStart();\n      case gameMode.active:\n        return renderActive();\n      case gameMode.end:\n        return renderGameOver();\n      default:\n        throw new Error(`Unhandled game state ${currentGameMode}`);\n    }\n  };\n\n  return <div className=\"game-container\">{getGameRender()}</div>;\n}\n","import React from \"react\";\n\nimport GameHandler from \"./components/GameHandler\";\n\n// this seems bad, b/c isn't this a side effect, which should be in a useEffect?\n// (but that doesn't work here either, don't want this to run on mount/unmount...)\nconst clearLocalStorage = () => {\n  console.log(\"localStorage cleared!\");\n  localStorage.clear();\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <span>Memory Test</span>\n        <div className=\"gh-icon-placeholder\" onClick={clearLocalStorage}></div>\n      </header>\n      <GameHandler />\n      <footer>created by isaiahaiasi w/ :heart:</footer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}